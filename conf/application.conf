# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.http.secret.key = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false


# CORS
# ~~~~~
play.filters.enabled += play.filters.cors.CORSFilter
play.filters.cors {
 # allow all paths
  pathPrefixes = ["/", "null"]
}


play.filters.disabled += play.filters.headers.SecurityHeadersFilter
play.filters.disabled += play.filters.csrf.CSRFFilter
play.filters.disabled += play.filters.hosts.AllowedHostsFilter

play.filters.hosts {
  # Allow requests to example.com, its subdomains, and localhost:9000.
  # All hosts allowed
  allowedOrigins = ["."]
}

play.http.secret.key=${?APPLICATION_SECRET}
play.server.http.idleTimeout = 180 seconds
akka.actor.default-dispatcher.fork-join-executor.parallelism-max = 64
akka.actor.default-dispatcher.fork-join-executor.parallelism-factor = 3.0
akka.actor.codecheck-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
     fixed-pool-size = 100
  }
  throughput = 1
}

play.http.session.httpOnly=true
play.http.session.sameSite="None"
play.http.session.secure=true
play.http.session.maxAge=1d

# https://www.playframework.com/documentation/2.8.3/HTTPServer#Configuring-trusted-proxies
# This doesn't actually work--see the comment in LTIAssignment.java, but maybe it will one day.
# Per https://cloud.google.com/load-balancing/docs/https#target-proxies, the trusted proxy is
# either in the range 130.211.0.0/22 or 35.191.0.0/16, but "or" is not supported by Play.
play.http.forwarded.trustedProxies=["0.0.0.0/0", "::/0"]

# These are used for local simulations of storage, or comrun
# To use cloud services, define 
# com.horstmann.codecheck.s3.region
# com.horstmann.codecheck.dynamodb.region
# or for a SQL database
# com.horstmann.codecheck.sql.driver
# com.horstmann.codecheck.sql.TODO
# and for cloud code execution
# com.horstmann.codecheck.comrun.remote
com.horstmann.codecheck.storage.local="/opt/codecheck/storage"
com.horstmann.codecheck.comrun.local="/opt/codecheck/comrun"
com.horstmann.codecheck.storage.type=local
# can also be aws or sql

include "production"
